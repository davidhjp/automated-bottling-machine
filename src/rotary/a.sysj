rotary(
		input signal tableAlignedWithSensor, bottleAtPos5, capOnBottleAtPos1,GUITrigger,capped;
		output signal rotaryTableTrigger;
		input boolean channel fillerReady, capperReady, convReady;
		input boolean channel filler_detect, capper_detect, conv_detect;
		input boolean channel requestCap;
		output boolean channel trig_filler, trig_capper, trig_conveyor;
		)
->
{
	signal placeCapOK, placeCap;
	{
		System.out.println("starting");
		loop{
			abort(GUITrigger){
				{
					if(#filler_detect){
						send trig_filler(true);
						pause;
						receive fillerReady;
					}
				}
				||
				{
					if (#capper_detect){
						send trig_capper(true);
						pause;
						receive capperReady;
					}
				}
				||
				{
					if (#conv_detect){
						send trig_conveyor(true);
						pause;
						receive convReady;
					}
				}
				||
				{
					present(placeCap) {
						halt;
					}
				}

				if(#filler_detect || #capper_detect || #conv_detect) {
					present(bottleAtPos5) {
						waitl(1s);
						await(!bottleAtPos5);
					}
					trap(T){{waitl(100ms); exit(T);} || { sustain rotaryTableTrigger;}}

					waitl(3s);

					await(tableAlignedWithSensor);
					System.out.println("aligned");
				}
				pause;
			} do {
				trap(T){{waitl(100ms); exit(T);} || {sustain rotaryTableTrigger;}}
				pause;
				waitl(3s);
			}
		}
	}
	||
	{
		{loop {receive filler_detect; pause;}} || {loop {receive capper_detect; pause;}} || {loop {receive conv_detect; pause;}}
	}
	||
	{
		loop{
			receive requestCap;
			System.out.println("requestCap");
			abort(immediate GUITrigger){sustain placeCap;}
			System.out.println("placeCapOK");
			pause;
		}
	}
	
}
